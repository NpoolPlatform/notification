syntax = "proto3";

package notification.v1;

option go_package = "github.com/NpoolPlatform/notification/message/npool";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// Service Name
service Notification {
    // Method Version
    rpc Version (google.protobuf.Empty) returns (VersionResponse){
        option (google.api.http) = {
            post: "/version"
            body: "*"
        };
    }

    rpc CreateAnnouncement(CreateAnnouncementRequest) returns (CreateAnnouncementResponse) {
        option (google.api.http) = {
            post: "/create/announcement"
            body: "*"
        };
    }
    rpc UpdateAnnouncement(UpdateAnnouncementRequest) returns (UpdateAnnouncementResponse) {
        option (google.api.http) = {
            post: "/update/announcement"
            body: "*"
        };
    }
    rpc GetAnnouncementsByApp(GetAnnouncementsByAppRequest) returns (GetAnnouncementsByAppResponse) {
        option (google.api.http) = {
            post: "/get/announcements/by/app"
            body: "*"
        };
    }

    rpc CreateNotification(CreateNotificationRequest) returns (CreateNotificationResponse) {
        option (google.api.http) = {
            post: "/create/notification"
            body: "*"
        };
    }
    rpc UpdateNotification(UpdateNotificationRequest) returns (UpdateNotificationResponse) {
        option (google.api.http) = {
            post: "/update/notification"
            body: "*"
        };
    }
    rpc GetNotificationsByAppUser(GetNotificationsByAppUserRequest) returns (GetNotificationsByAppUserResponse) {
        option (google.api.http) = {
            post: "/get/notifications/by/app/user"
            body: "*"
        };
    }

    rpc CreateReadUser(CreateReadUserRequest) returns (CreateReadUserResponse) {
        option (google.api.http) = {
            post: "/create/read/user"
            body: "*"
        };
    }
    rpc CheckReadUser(CheckReadUserRequest) returns (CheckReadUserResponse) {
        option (google.api.http) = {
            post: "/check/read/user"
            body: "*"
        };
    }

    rpc CreateMail(CreateMailRequest) returns (CreateMailResponse) {
        option (google.api.http) = {
            post: "/create/mail"
            body: "*"
        };
    }
    rpc UpdateMail(UpdateMailRequest) returns (UpdateMailResponse) {
        option (google.api.http) = {
            post: "/update/mail"
            body: "*"
        };
    }
}

// request body and response
message VersionResponse {
    string Info = 100;
}

message Announcement {
    string ID = 10;
    string AppID = 20;
    string Title = 30;
    string Content = 40;
    uint32 CreateAt = 50;
}

message CreateAnnouncementRequest {
    Announcement Info = 10;
}

message CreateAnnouncementResponse {
    Announcement Info = 10;
}

message UpdateAnnouncementRequest {
    Announcement Info = 10;
}

message UpdateAnnouncementResponse {
    Announcement Info = 10;
}

message GetAnnouncementsByAppRequest {
    string AppID = 10;
}

message GetAnnouncementsByAppRequest {
    repeated Announcement Infos = 10;
}

message Notification {
    string ID = 10;
    string AppID = 20;
    string UserID = 30;
    string Title = 40;
    string Content = 50;
    string CreateAt = 60;
}

message CreateNotificationRequest {
    Notification Info = 10;
}

message CreateNotificationResponse {
    Notification Info = 10;
}

message UpdateNotificationRequest {
    Notification Info = 10;
}

message UpdateNotificationResponse {
    Notification Info = 10;
}

message GetNotificationsByAppUserRequest {
    string AppID = 10;
    string UserID = 20;
}

message GetNotificationsByAppUserRequest {
    repeated Notification Infos = 10;
}

message ReadUser {
    string ID = 10;
    string AppID = 20;
    string AnnouncementID = 30;
    string UserID = 40;
}
